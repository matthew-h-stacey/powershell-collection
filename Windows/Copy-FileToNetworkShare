# Assumes $username has write access to destination

### PRE-SCRIPT - Run this outside the .ps1 file ###
$password = Read-Host "Enter password" -AsSecureString
# Convert the secure string to an encrypted standard string
$encryptedSS = ConvertFrom-SecureString -SecureString $password
# Output the encrypted string to console to use it as the input for the ConvertTo-SecureString object
$encryptedSS 
### END PRE-SCRIPT ###

$username = "CONTOSO\reports"
$securePassword = ConvertTo-SecureString "01000000d08c9ddf0115d1118c7a00c04fc297eb0100000010a572af45655b4da94d6f5e58edb2c60000000002000000000010660000000100002000000038d428a30e8e1277bd2303ebef9bd40e22539ca66d3cec72dfbdf01348330c21000000000e80000000020000200000002b3a49dae877c68215ada6f147dd5eb98e7fa389b3ce9470c14bb654ee823bed4000000092d67f58ac8656957058cccdf05cadfc7c2e69a5344a62267808288015c5f66ef4f61692aab75aa751040b6bd1f2677def84bb70b81b4d96c2ba7f5446ebbdcb40000000ac85f2ee157308c8cdbbee2c8ef563b7527acf94fa5d43d4933f1368c42aecd47e709dd88c352edd8d0e930cc336c4c54e55d61e34f8bafe51185378eb5aedc2"
$creds = New-Object System.Management.Automation.PSCredential -ArgumentList $username, $securePassword
try {
    New-PSDrive -Name "Reports" -PSProvider "FileSystem" -Root "\\FILE01\IT\Reports" -Credential $creds -ErrorAction Stop
    Copy-Item C:\Scripts\MailboxForwardingReport.csv "Reports:\Mailbox Forwarding" -Force
    Remove-PSDrive -Name Reports
}
catch {
    Write-Host "Error: $($Error[0].exception)"
    break
}
